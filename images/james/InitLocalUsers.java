// Java file to create database for local users JPA
// Malcolm Schongalla 2025-02-24

// You should not need to run this, because the files `jamesdb.properties`
// and `jamesdb.script` are provided in the SMTP garden James folder.
// This file is provided for documentation purposes.  If you do need to
// run this, you may only need to run it once.  Subsequently, you should be
// able to just manually edit `jamesdb.script` that file to add any
// additional local users.

// Before running this:
// 1. Delete any pre-existing jamesdb.* files or this will fail
// 2. Edit myHSQLDBPath as needed on line 20

// Depends on HSQLDB ver > 2.0 for JDBCDriver class, tested with 2.7.2
// Retrieved on 2025-02-24 from:
// https://repo1.maven.org/maven2/org/hsqldb/hsqldb/2.7.2/hsqldb-2.7.2.jar

// Password hash (lines 45, 49) generated by:
// printf -n "digiheals" | sha256sum -z


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;

public class InitLocalUsers {

	public static void main(String[] args) throws Exception {

		// EDIT THIS FOR YOUR HOST:
		String myHSQLDBPath = "/home/malcolm/smtp-garden/images/james/conf/localusersdb";

		Class.forName("org.hsqldb.jdbc.JDBCDriver");

		String dbName = "jdbc:hsqldb:file:" + myHSQLDBPath;
		try (Connection conn = DriverManager.getConnection(dbName, "digiheals", "digiheals"); // username, pw
		     Statement stmt = conn.createStatement()) {
			stmt.execute("CREATE TABLE IF NOT EXISTS JAMES_USER (" +
				      "USERNAME VARCHAR(100) NOT NULL PRIMARY KEY, " +
				      "PASSWORD_HASH_ALGORITHM VARCHAR(100) DEFAULT 'SHA-256' NOT NULL, " +
				      "PASSWORD VARCHAR(128) NOT NULL, " +
				      "version INTEGER)");
			stmt.executeUpdate("INSERT INTO JAMES_USER (USERNAME, PASSWORD_HASH_ALGORITHM, PASSWORD, version) " +
					     "VALUES ('user1', " +
					     "'SHA-256', " +
					     "'9a1da060b18ba18608a1730a8f37921a302a4ad29a97dc45bd3b18da27b069c3', " +
					     "1)");
			stmt.executeUpdate("INSERT INTO JAMES_USER VALUES (" +
					     "'user2', " +
					     "'SHA-256', " +
					     "'9a1da060b18ba18608a1730a8f37921a302a4ad29a97dc45bd3b18da27b069c3', " +
					     "1)");
			stmt.execute("SHUTDOWN");
		}
	}
}

